version: '3.8'

services:
  app:
    build: .
    container_name: wb-tariffs-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
      - DB_SSL=false
      - GOOGLE_SERVICE_ACCOUNT_KEY_FILE=/app/credentials/service-account.json
      - SYNC_CRON_SCHEDULE=${SYNC_CRON_SCHEDULE}
      - SHEETS_SYNC_CRON_SCHEDULE=${SHEETS_SYNC_CRON_SCHEDULE}
      - API_ACCESS_TOKEN=${API_ACCESS_TOKEN}
    env_file:
      - .env
    volumes:
      - ./google-service-account.json:/app/credentials/service-account.json:ro
      - ./scripts:/app/scripts:ro
    ports:
      - '3000:3000'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - wb-tariffs-network

  postgres:
    image: postgres:15-alpine
    container_name: wb-tariffs-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '${POSTGRES_PORT}:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER}']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - wb-tariffs-network

volumes:
  postgres_data:

networks:
  wb-tariffs-network:
    driver: bridge
